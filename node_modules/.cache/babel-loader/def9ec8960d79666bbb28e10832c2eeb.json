{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kurd\\\\Desktop\\\\tailwind-react\\\\my-project\\\\src\\\\components\\\\context\\\\CounterProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { createContext, useContext, useReducer, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Count = /*#__PURE__*/createContext();\nconst CountDispatcher = /*#__PURE__*/createContext();\n\nconst CounterProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  let initialState = 0;\n  const [count, dispatch] = useReducer((state, action) => {\n    switch (action) {\n      case \"increment\":\n        return state + 1;\n\n      case \"reset\":\n        return initialState;\n\n      case \"decrement\":\n        return state - 1;\n    }\n  }, initialState);\n  return /*#__PURE__*/_jsxDEV(Count.Provider, {\n    value: count,\n    children: /*#__PURE__*/_jsxDEV(CountDispatcher.Provider, {\n      value: dispatch,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CounterProvider, \"lCuvQ9nV3fBNxlJmZItTAw1hKFs=\");\n\n_c = CounterProvider;\nexport default CounterProvider;\nexport const useCount = () => {\n  _s2();\n\n  return useContext(Count);\n};\n\n_s2(useCount, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const useCountAction = () => {\n  _s3();\n\n  const setCount = useContext(CountDispatcher);\n\n  const addOne = () => {\n    setCount(privCount => privCount + 1);\n  };\n\n  const removeOne = () => {\n    setCount(privCount => privCount - 1);\n  };\n\n  return {\n    addOne,\n    removeOne\n  };\n};\n\n_s3(useCountAction, \"cW/pXOS6kIxP/4Ro9oYQZ4DQ8Vc=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"CounterProvider\");","map":{"version":3,"sources":["C:/Users/kurd/Desktop/tailwind-react/my-project/src/components/context/CounterProvider.js"],"names":["React","createContext","useContext","useReducer","useState","Count","CountDispatcher","CounterProvider","children","initialState","count","dispatch","state","action","useCount","useCountAction","setCount","addOne","privCount","removeOne"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,EAAuDC,QAAvD,QAAuE,OAAvE;;AAEA,MAAMC,KAAK,gBAAGJ,aAAa,EAA3B;AACA,MAAMK,eAAe,gBAAGL,aAAa,EAArC;;AAEA,MAAMM,eAAe,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACxC,MAAIC,YAAY,GAAG,CAAnB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,UAAU,CAAC,CAACS,KAAD,EAAQC,MAAR,KAAmB;AACtD,YAAQA,MAAR;AACE,WAAK,WAAL;AACE,eAAOD,KAAK,GAAG,CAAf;;AACF,WAAK,OAAL;AACE,eAAOH,YAAP;;AACF,WAAK,WAAL;AACE,eAAOG,KAAK,GAAG,CAAf;AANJ;AAQD,GATmC,EASjCH,YATiC,CAApC;AAWA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAEC,KAAvB;AAAA,2BACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,MAAA,KAAK,EAAEC,QAAjC;AAAA,gBACGH;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CApBD;;GAAMD,e;;KAAAA,e;AAsBN,eAAeA,eAAf;AAEA,OAAO,MAAMO,QAAQ,GAAG;AAAA;;AAAA,SAAMZ,UAAU,CAACG,KAAD,CAAhB;AAAA,CAAjB;;IAAMS,Q;;AACb,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAClC,QAAMC,QAAQ,GAAGd,UAAU,CAACI,eAAD,CAA3B;;AAEA,QAAMW,MAAM,GAAG,MAAM;AACnBD,IAAAA,QAAQ,CAACE,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAAR;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAG,MAAM;AACtBH,IAAAA,QAAQ,CAACE,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAAR;AACD,GAFD;;AAIA,SAAO;AAAED,IAAAA,MAAF;AAAUE,IAAAA;AAAV,GAAP;AACD,CAZM;;IAAMJ,c","sourcesContent":["import React, { createContext, useContext, useReducer, useState } from 'react';\r\n\r\nconst Count = createContext()\r\nconst CountDispatcher = createContext()\r\n\r\nconst CounterProvider = ({ children }) => {\r\n  let initialState = 0\r\n  const [count, dispatch] = useReducer((state, action) => {\r\n    switch (action) {\r\n      case \"increment\":\r\n        return state + 1;\r\n      case \"reset\":\r\n        return initialState;\r\n      case \"decrement\":\r\n        return state - 1;\r\n    }\r\n  }, initialState)\r\n\r\n  return (\r\n    <Count.Provider value={count} >\r\n      <CountDispatcher.Provider value={dispatch} >\r\n        {children}\r\n      </CountDispatcher.Provider>\r\n    </Count.Provider>\r\n  );\r\n}\r\n\r\nexport default CounterProvider;\r\n\r\nexport const useCount = () => useContext(Count)\r\nexport const useCountAction = () => {\r\n  const setCount = useContext(CountDispatcher)\r\n\r\n  const addOne = () => {\r\n    setCount(privCount => privCount + 1)\r\n  }\r\n\r\n  const removeOne = () => {\r\n    setCount(privCount => privCount - 1)\r\n  }\r\n\r\n  return { addOne, removeOne }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}