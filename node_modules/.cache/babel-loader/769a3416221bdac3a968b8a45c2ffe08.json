{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kurd\\\\Desktop\\\\tailwind-react\\\\my-project\\\\src\\\\components\\\\context\\\\CounterProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Count = /*#__PURE__*/createContext();\nconst CountDispatcher = /*#__PURE__*/createContext();\n\nconst CounterProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [count, setCount] = useState(0);\n  return /*#__PURE__*/_jsxDEV(Count.Provider, {\n    value: count,\n    children: /*#__PURE__*/_jsxDEV(CountDispatcher.Provider, {\n      value: setCount,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CounterProvider, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c = CounterProvider;\nexport default CounterProvider;\nexport const useCount = () => {\n  _s2();\n\n  return useContext(Count);\n};\n\n_s2(useCount, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const useCountAction = () => {\n  _s3();\n\n  const setCount = useContext(CountDispatcher);\n};\n\n_s3(useCountAction, \"cW/pXOS6kIxP/4Ro9oYQZ4DQ8Vc=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"CounterProvider\");","map":{"version":3,"sources":["C:/Users/kurd/Desktop/tailwind-react/my-project/src/components/context/CounterProvider.js"],"names":["React","createContext","useContext","useState","Count","CountDispatcher","CounterProvider","children","count","setCount","useCount","useCountAction"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,QAA2D,OAA3D;;AAEA,MAAMC,KAAK,gBAAGH,aAAa,EAA3B;AACA,MAAMI,eAAe,gBAAGJ,aAAa,EAArC;;AAEA,MAAMK,eAAe,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACxC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;AAEA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAEK,KAAvB;AAAA,2BACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,MAAA,KAAK,EAAEC,QAAjC;AAAA,gBACGF;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAVD;;GAAMD,e;;KAAAA,e;AAYN,eAAeA,eAAf;AAEA,OAAO,MAAMI,QAAQ,GAAG;AAAA;;AAAA,SAAMR,UAAU,CAACE,KAAD,CAAhB;AAAA,CAAjB;;IAAMM,Q;;AACb,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAClC,QAAMF,QAAQ,GAAGP,UAAU,CAACG,eAAD,CAA3B;AACD,CAFM;;IAAMM,c","sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\nconst Count = createContext()\r\nconst CountDispatcher = createContext()\r\n\r\nconst CounterProvider = ({ children }) => {\r\n  const [count, setCount] = useState(0)\r\n\r\n  return (\r\n    <Count.Provider value={count} >\r\n      <CountDispatcher.Provider value={setCount} >\r\n        {children}\r\n      </CountDispatcher.Provider>\r\n    </Count.Provider>\r\n  );\r\n}\r\n\r\nexport default CounterProvider;\r\n\r\nexport const useCount = () => useContext(Count)\r\nexport const useCountAction = () => {\r\n  const setCount = useContext(CountDispatcher)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}